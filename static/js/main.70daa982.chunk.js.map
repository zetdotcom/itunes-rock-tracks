{"version":3,"sources":["components/atoms/ButtonLink.js","components/atoms/Paper.js","utils/index.js","components/TrackCard.js","components/TracksList.js","components/TrackDetailsPage.js","api/tracksApi.js","redux/tracksSlice.js","App.js","constants/index.js","serviceWorker.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["memo","props","element","children","className","rest","Paper","getUSD","num","Intl","NumberFormat","style","currency","format","TrackCard","trackName","artist","price","artworkUrl","id","location","useLocation","console","log","data-testid","width","height","src","alt","to","pathname","TracksList","useSelector","state","tracks","tracksList","loading","error","map","track","key","trackId","artistName","trackPrice","artworkUrl100","TrackDetailsPage","useParams","find","Number","trackTimeMillis","releaseDate","trackReleaseDate","isNaN","Date","getTime","Object","keys","length","duration","seconds","Math","floor","minutes","hours","msToTime","href","trackViewUrl","target","rel","tracksApi","a","fetch","res","json","results","tracksSlice","createSlice","name","initialState","reducers","requestTracks","receiveTracks","action","payload","failedReceiveTracks","actions","reducer","fetchTracks","dispatch","getTracks","then","data","catch","err","App","useDispatch","useEffect","exact","path","from","Boolean","window","hostname","match","rootReducer","combineReducers","tracksReducer","store","configureStore","preloadedState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.70daa982.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ButtonLink.scss';\r\n\r\nfunction ButtonLink(props) {\r\n\tconst { element, children, className, ...rest } = props;\r\n\r\n\tfunction renderButtonLink() {\r\n\t\tif (element === 'a') {\r\n\t\t\treturn (\r\n\t\t\t\t<a className={`mz-button-link ${className ? className : ''}`} {...rest}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</a>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (element === 'Link') {\r\n\t\t\treturn (\r\n\t\t\t\t<Link className={`mz-button-link ${className ? className : ''}`} {...rest}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn renderButtonLink();\r\n}\r\n\r\nButtonLink.propTypes = {\r\n\telement: PropTypes.oneOf(['a', 'Link']).isRequired,\r\n};\r\n\r\nexport default memo(ButtonLink);\r\n","import React from 'react';\r\nimport './Paper.scss';\r\n\r\nexport default function Paper({ children, ...rest }) {\r\n\treturn (\r\n\t\t<div className='mz-paper' {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const getUSD = num => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(num);\r\n\r\nexport function msToTime(duration) {\r\n\tlet seconds = Math.floor((duration / 1000) % 60);\r\n\tlet minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\tlet hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n\thours = hours < 10 ? '0' + hours : hours;\r\n\tminutes = minutes < 10 ? '0' + minutes : minutes;\r\n\tseconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n\treturn `${hours}:${minutes}:${seconds}`;\r\n}\r\n","import React from 'react';\r\nimport ButtonLink from './atoms/ButtonLink';\r\nimport Paper from './atoms/Paper';\r\nimport { getUSD } from '../utils';\r\nimport './TrackCard.scss';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { HOME_ROUTE } from '../constants';\r\n\r\nexport default function TrackCard({ trackName, artist, price, artworkUrl, id }) {\r\n\tconst location = useLocation();\r\n\tconsole.log(location);\r\n\r\n\treturn (\r\n\t\t<Paper data-testid='track-card'>\r\n\t\t\t<div>\r\n\t\t\t\t<img width='100%' height='100%' src={artworkUrl} alt={trackName} />\r\n\t\t\t</div>\r\n\t\t\t<div>{trackName}</div>\r\n\t\t\t<div>{artist}</div>\r\n\t\t\t<div>{getUSD(price)}</div>\r\n\t\t\t<div>\r\n\t\t\t\t<ButtonLink element='Link' to={`${location.pathname}/${id}`}>\r\n\t\t\t\t\tSee more\r\n\t\t\t\t</ButtonLink>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TrackCard from './TrackCard';\r\n\r\nimport './TrackList.scss';\r\n\r\nexport default function TracksList() {\r\n\tconst { tracksList, loading, error } = useSelector(state => state.tracks);\r\n\tconsole.log(error);\r\n\r\n\tfunction renderContent() {\r\n\t\tif (error) {\r\n\t\t\treturn <div>Sorry, there was an error</div>;\r\n\t\t}\r\n\t\tif (loading) {\r\n\t\t\treturn <div>Loading ...</div>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<ul className='track-list'>\r\n\t\t\t\t{tracksList.map(track => (\r\n\t\t\t\t\t<li className='track-list__item' key={track.trackId}>\r\n\t\t\t\t\t\t<TrackCard\r\n\t\t\t\t\t\t\tid={track.trackId}\r\n\t\t\t\t\t\t\ttrackName={track.trackName}\r\n\t\t\t\t\t\t\tartist={track.artistName}\r\n\t\t\t\t\t\t\tprice={track.trackPrice}\r\n\t\t\t\t\t\t\tartworkUrl={track.artworkUrl100}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <div>{renderContent()}</div>;\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUSD, msToTime } from '../utils';\r\nimport { format } from 'date-fns';\r\nimport ButtonLink from './atoms/ButtonLink';\r\nimport Paper from './atoms/Paper';\r\nimport './TrackDetailsPage.scss';\r\n\r\nexport default function TrackDetailsPage() {\r\n\tconst { trackId } = useParams();\r\n\tconst track = useSelector(state => state.tracks.tracksList.find(track => track.trackId === Number(trackId)) || {});\r\n\r\n\tconst { artworkUrl100, trackName, artistName, trackPrice, trackTimeMillis, releaseDate } = track;\r\n\tconst trackReleaseDate =\r\n\t\t!isNaN(new Date(releaseDate).getTime()) && format(new Date(releaseDate), 'EEEE k:mm, dd MMMM yyyy');\r\n\treturn (\r\n\t\t<div className='track-details-page'>\r\n\t\t\t<Paper>\r\n\t\t\t\t{Object.keys(track).length ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img width='100%' height='100%' src={artworkUrl100} alt={trackName} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{trackName}</div>\r\n\t\t\t\t\t\t<div>{artistName}</div>\r\n\t\t\t\t\t\t<div>Price: {getUSD(trackPrice)}</div>\r\n\t\t\t\t\t\t<div>Duration: {msToTime(trackTimeMillis)}</div>\r\n\t\t\t\t\t\t<div>Release Date: {trackReleaseDate}</div>\r\n\t\t\t\t\t\t<ButtonLink element='a' href={track.trackViewUrl} target='blank' rel='noopoener noreferrer'>\r\n\t\t\t\t\t\t\tMore details\r\n\t\t\t\t\t\t</ButtonLink>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>Soory, no details find for this track</div>\r\n\t\t\t\t)}\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n","const CORS_ANYWHERE = 'https://cors-anywhere.herokuapp.com';\r\nconst tracksApi = 'https://itunes.apple.com/search?term=rock&media=music';\r\n\r\nexport async function getTracks() {\r\n\tconst res = await fetch(`${CORS_ANYWHERE}/${tracksApi}`);\r\n\tconst json = await res.json();\r\n\tconst { results } = await json;\r\n\treturn results;\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getTracks } from '../api/tracksApi';\r\n\r\nconst tracksSlice = createSlice({\r\n\tname: 'tracks',\r\n\tinitialState: {\r\n\t\ttracksList: [],\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t},\r\n\treducers: {\r\n\t\trequestTracks(state) {\r\n\t\t\tstate.loading = true;\r\n\t\t},\r\n\t\treceiveTracks(state, action) {\r\n\t\t\tstate.tracksList = action.payload;\r\n\t\t\tstate.loading = false;\r\n\t\t},\r\n\t\tfailedReceiveTracks(state, action) {\r\n\t\t\tstate.error = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst { actions, reducer } = tracksSlice;\r\nexport const { requestTracks, receiveTracks, failedReceiveTracks } = actions;\r\nexport default reducer;\r\n\r\nexport function fetchTracks() {\r\n\treturn function(dispatch) {\r\n\t\tdispatch(requestTracks());\r\n\t\treturn getTracks()\r\n\t\t\t.then(data => dispatch(receiveTracks(data)))\r\n\t\t\t.catch(err => dispatch(failedReceiveTracks(err)));\r\n\t};\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport TracksList from './components/TracksList';\r\nimport TrackDetailsPage from './components/TrackDetailsPage';\r\nimport { fetchTracks } from './redux/tracksSlice';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport { HOME_ROUTE } from './constants';\r\n\r\nfunction App() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchTracks());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={`/${HOME_ROUTE}`}>\r\n\t\t\t\t\t\t<TracksList />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Redirect exact from='/' to={`/${HOME_ROUTE}`} />\r\n\t\t\t\t\t<Route path={`/${HOME_ROUTE}/:trackId`}>\r\n\t\t\t\t\t\t<TrackDetailsPage />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","export const HOME_ROUTE = 'itunes-rock-tracks';\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport tracksReducer from './tracksSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n\ttracks: tracksReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = state =>\r\n\tconfigureStore({\r\n\t\treducer: rootReducer,\r\n\t\tpreloadedState: state,\r\n\t});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store()}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}